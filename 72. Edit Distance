Time complexity: O(m+n)
Space complexity: O(m+n)
Did this code successfully submitted on leetcode: Yes

class Solution {
    public int minDistance(String word1, String word2) {
        
        int m = word1.length();
        int n = word2.length();
        
        int[][] dp = new int[m+1][n+1];
        
        for(int i = 0; i < n; i++){
            dp[0][i+1] = i+1;
        }
        
        for(int i = 0; i < m; i++){
            dp[i+1][0] = i+1;
        }
        
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                
                if(word1.charAt(i)==word2.charAt(j))
                    dp[i+1][j+1] = dp[i][j];
                else
                    dp[i+1][j+1] = Math.min(dp[i][j], Math.min(dp[i][j+1], dp[i+1][j]))+1;
            }
        }
        return dp[m][n];
    }
}
